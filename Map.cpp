#include "Map.h"
#include <iostream>

using namespace std;
char Map::map[25][25] = {
        'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B',
        'B', 'B', 'B', 'B',
        'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P',
        'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P',
        'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'P', 'B', 'B', 'B', 'B', 'B', 'P', 'P', 'B', 'B', 'P', 'P', 'P', 'B', 'B', 'B', 'B', 'B',
        'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'B', 'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P',
        'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'B', 'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P',
        'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P',
        'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P',
        'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P',
        'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P',
        'B', 'P', 'P', 'B',
        'B', 'P', 'P', 'B', 'P', 'P', 'P', 'P', 'P', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'P', 'P', 'P', 'P', 'P',
        'B', 'P', 'P', 'B',
        'B', 'P', 'P', 'B', 'P', 'P', 'P', 'P', 'P', 'B', 'P', 'P', 'P', 'P', 'P', 'B', 'P', 'P', 'P', 'P', 'P',
        'B', 'P', 'P', 'B',
        'B', 'P', 'P', 'B', 'B', 'P', 'P', 'P', 'P', 'B', 'P', 'P', 'P', 'P', 'P', 'B', 'P', 'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'B',
        'B', 'P', 'P', 'B', 'P', 'P', 'P', 'P', 'P', 'B', 'P', 'P', 'P', 'P', 'P', 'B', 'P', 'P', 'P', 'P', 'P',
        'B', 'P', 'P', 'B',
        'B', 'P', 'P', 'B', 'P', 'P', 'P', 'P', 'P', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'P', 'P', 'P', 'P', 'P',
        'B', 'P', 'P', 'B',
        'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P',
        'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P',
        'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'B', 'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P',
        'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'B', 'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P',
        'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'B', 'B', 'B', 'B', 'B', 'P', 'P', 'P', 'B', 'B', 'P', 'P', 'P', 'B', 'B', 'B', 'B', 'B',
        'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P',
        'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P',
        'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P',
        'P', 'P', 'P', 'B',
        'B', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P', 'P',
        'P', 'P', 'P', 'B',
        'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B', 'B',
        'B', 'B', 'B', 'B',
};

bool Map::isBlocked(float x, float y) {
    cout << 24 - (int) y / 40 << '\t' << (int) x / 40 << endl;
    return map[24 - (int) y / 40][(int) x / 40] == 'B';
}
